parameters:
	level: max
	# Intent: ignore errors for narrowing types of a generic type.
	treatPhpDocTypesAsCertain: false
	stubFiles:
		- Stubs/BackedEnum.stub
	paths:
		- Src/
		- Tests/
	ignoreErrors:
		- # SplFixedArray is created with a list, so this shouldn't be a problem.
			identifier: argument.type
			message: '#^Parameter \#1 .*? of method .*?setItemsIndices\(\) expects list\<string\>\, array\<int\, string\|null\> given\.$#'
		-
			identifier: generics.noParent
			message: '#^Enum .*? has \@implements tag\, but does not implement any interface\.$#'
		-
			path: Src/Traits/Table/TableExtractor.php
			messages:
				- '#^Property .*?::\$discoveredTable__transformers \(array{.*?}\) does not accept non-empty-array<.*?>.$#'
				- '#^.*?\:\:useCurrentTableColumnDetails\(\) should return array\{array\<int, string\>, array\<int, int\>, int\|null, int, .*?Transformer\<.*?, string\>\} but returns array\{array\<int, string\>, array\<int, int\>, int\|null, 0, .*?Transformer\<.*?, string\>\|.*?MarshallItem\}\.$#'
		- # Ignore DOMNodeList->getIterator() not being Iterator.
			path: Src/Traits/Table/HtmlTableFromNode.php
			identifier: return.type
			message: '#^Method .*?::getChildNodesIteratorFrom\(\) should return Iterator\<int, DOMNode\> but returns Traversable\<int, DOMNode\>.$#'
		-
			path: Src/Traits/Table/HtmlTableFromString.php
			identifier: argument.type
			messages:
				# Ignore row transformer return. Either returns CollectionSet, ArrayObject, or normalized array.
				- '#^Parameter \#1 \$elementList of method .*?\:\:inferTableDataFrom\(\) expects iterable\<\(int\|string\), array\{string, string, string, string, string\}\|DOMNode\>, iterable\<int, DOMNode\|string\>\|non\-empty\-list\<array\{string, string, string, string, string\}\> given\.$#'
				# $element is a valid DOMElement. PHPStan cannot narrow down type from TableExtractor::isTableColumnStructure().
				- '#^Parameter \#1 \$element of method .*?:\:registerCurrentTableColumn\(\) expects array\{string, string, string, string, string\}\|DOMElement\|string, array\{string, string, string, string, string\}\|DOMNode given\.$#'
		- # Ignore default transformers used.
			path: Src/AccentedSingleTableScraper.php
			identifier: return.type
			message: '#^Method .*?AccentedSingleTableScraper\:\:getInjectedOrDefaultTransformers\(\) should return array\{.*?\} but returns array\{.*?\}\.$#'
		- # Ignore DOMNodeList->childNodes->getIterator() not being an iterator.
			path: Src/Marshaller/TableRowMarshaller.php
			identifier: return.type
			message: '#^Method .*?TableRowMarshaller\:\:validate\(\) should return iterable\<int, DOMNode\|list\<array\{string, string, string, string, string\}\>\> but returns array\<mixed\>\|Traversable\<int, DOMNode\>\.$#'
