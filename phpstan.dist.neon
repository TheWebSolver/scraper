parameters:
	level: max
	# Intent: ignore errors for narrowing types of a generic type.
	treatPhpDocTypesAsCertain: false
	paths:
		- Src/
		- Tests/
	ignoreErrors:
		-
			path: Src/Traits/Table/TableExtractor.php
			messages:
				- '#^Property .*?::\$discoveredTable__transformers \(array{.*?}\) does not accept non-empty-array<.*?>.$#'
				- '#^.*?\:\:useCurrentTableColumnDetails\(\) should return array\{array\<int, string\>, array\<int, int\>, int\|null, int, .*?Transformer\<.*?, string\>\} but returns array\{array\<int, string\>, array\<int, int\>, int\|null, 0, .*?Transformer\<.*?, string\>\|.*?TableColumnMarshaller\}\.$#'
		- # Ignore DOMNodeList->getIterator() not being Iterator.
			path: Src/Traits/HtmlTableFromNode.php
			identifier: return.type
			message: '#^Method .*?::getChildNodesIteratorFrom\(\) should return Iterator\<int, DOMNode\> but returns Traversable\<int, DOMNode\>.$#'
		- # Ignore already checked collection source being nullable.
			path: Src/SingleTableScraper.php
			identifier: property.nonObject
			count: 1
			message: '#^Cannot access property $items on .*?CollectFrom|null.$#'
		- # Ignore default transformers used.
			path: Src/AccentedSingleTableScraper.php
			message: '#^Method .*?AccentedSingleTableScraper\:\:getInjectedOrDefaultTransformers\(\) should return array\{.*?Transformer\<static\(.*?AccentedSingleTableScraper\<TColumnReturn\>\), TColumnReturn\>, .*?Transformer\<static\(.*?AccentedSingleTableScraper\<TColumnReturn\>\), TColumnReturn\>\} but returns array\{.*?Transformer\<static\(.*?AccentedSingleTableScraper\<TColumnReturn\>\), TColumnReturn\>\|.*?TableRowMarshaller\<mixed\>, .*?Transformer\<static\(.*?AccentedSingleTableScraper\<TColumnReturn\>\), TColumnReturn\>\|.*?TableColumnMarshaller\|.*?TableColumnTranslit\}\.$#'
